# üê≥ AstraTrade Docker Compose Configuration
# For easy development and production deployment

version: '3.8'

services:
  # ============================================================================
  # AstraTrade Web Application
  # ============================================================================
  astratrade-web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        WEB3AUTH_CLIENT_ID: ${WEB3AUTH_CLIENT_ID:-BPPbhL4egAYdv3vHFVQDhmueoOJKUeHJZe2X8LaMvMIq9go2GN72j6OwvheQkR2ofq8WveHJQtzNKaq0_o_xKuI}
        STARKNET_NETWORK: ${STARKNET_NETWORK:-sepolia-alpha}
        API_BASE_URL: ${API_BASE_URL:-https://api.astratrade.io}
        DEMO_MODE: ${DEMO_MODE:-false}
    container_name: astratrade-web
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.astratrade.rule=Host(`app.astratrade.io`)"
      - "traefik.http.routers.astratrade.tls=true"
      - "traefik.http.routers.astratrade.tls.certresolver=letsencrypt"

  # ============================================================================
  # Development Environment (Optional)
  # ============================================================================
  astratrade-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: astratrade-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/build  # Exclude build directory from mount
    environment:
      - FLUTTER_WEB_PORT=3000
      - WEB3AUTH_CLIENT_ID=${WEB3AUTH_CLIENT_ID:-BPPbhL4egAYdv3vHFVQDhmueoOJKUeHJZe2X8LaMvMIq9go2GN72j6OwvheQkR2ofq8WveHJQtzNKaq0_o_xKuI}
    profiles:
      - development
    restart: unless-stopped

  # ============================================================================
  # Reverse Proxy (Optional)
  # ============================================================================
  traefik:
    image: traefik:v2.10
    container_name: astratrade-proxy
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@astratrade.io"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/letsencrypt:/letsencrypt
    profiles:
      - production
      - proxy
    restart: unless-stopped

  # ============================================================================
  # Monitoring (Optional)
  # ============================================================================
  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: astratrade-metrics
    command:
      - -nginx.scrape-uri=http://astratrade-web/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - astratrade-web
    profiles:
      - monitoring
    restart: unless-stopped

# ============================================================================
# Networks
# ============================================================================
networks:
  default:
    name: astratrade-network
    driver: bridge

# ============================================================================
# Volumes
# ============================================================================
volumes:
  letsencrypt:
    driver: local